   1              	# 1 "../Startup/startup_XMC1300.S"
   1              	/**************************************************************************************************
   0              	
   0              	
   2              	 * @file     startup_XMC1300.S
   3              	 * @brief    CMSIS Core Device Startup File for Infineon XMC1300 Device Series
   4              	 * @version  V1.20
   5              	 * @date     15 Mai 2020
   6              	 *
   7              	 * @cond
   8              	 **************************************************************************************************
   9              	 * Copyright (c) 2012-2020, Infineon Technologies AG
  10              	 * All rights reserved.                        
  11              	 *                                             
  12              	 * Boost Software License - Version 1.0 - August 17th, 2003
  13              	 * 
  14              	 * Permission is hereby granted, free of charge, to any person or organization
  15              	 * obtaining a copy of the software and accompanying documentation covered by
  16              	 * this license (the "Software") to use, reproduce, display, distribute,
  17              	 * execute, and transmit the Software, and to prepare derivative works of the
  18              	 * Software, and to permit third-parties to whom the Software is furnished to
  19              	 * do so, all subject to the following:
  20              	 * 
  21              	 * The copyright notices in the Software and this entire statement, including
  22              	 * the above license grant, this restriction and the following disclaimer,
  23              	 * must be included in all copies of the Software, in whole or in part, and
  24              	 * all derivative works of the Software, unless such copies or derivative
  25              	 * works are solely in the form of machine-executable object code generated by
  26              	 * a source language processor.
  27              	 * 
  28              	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29              	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30              	 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31              	 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32              	 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33              	 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34              	 * DEALINGS IN THE SOFTWARE.
  35              	 *                                                                              
  36              	 * To improve the quality of the software, users are encouraged to share 
  37              	 * modifications, enhancements or bug fixes with Infineon Technologies AG 
  38              	 * at XMCSupport@infineon.com.
  39              	 **************************************************************************************************
  40              	 *
  41              	 **************************** Change history ********************************
  42              	 * V1.0, Oct, 02, 2012 PKB:Startup file for XMC1  
  43              	 * V1.1, Oct, 19, 2012 PKB:ERU and MATH interrupt handlers  
  44              	 * V1.2, Nov, 02, 2012 PKB:Renamed AllowPLLInitByStartup to AllowClkInitByStartup  
  45              	 * V1.3, Dec, 11, 2012 PKB:Attributes of .XmcVeneerCode section changed  
  46              	 * V1.4, Dec, 13, 2012 PKB:Removed unwanted interrupts/veneers  
  47              	 * V1.5, Jan, 26, 2013 PKB:Corrected the SSW related entries  
  48              	 * V1.6, Feb, 13, 2013 PKB:Relative path to Device_Data.h  
  49              	 * V1.7, Feb, 19, 2013 PKB:Included XMC1100_SCU.inc
  50              	 * V1.8, Jan, 24, 2014 PKB:Removed AllowClkInitStartup and DAVE Extended init
  51              	 * V1.9, Feb, 05, 2014 PKB:Removed redundant alignment code from copy+clear funcs
  52              	 * V1.10, Feb, 14, 2014 PKB:Added software_init_hook and hardware_init_hook
  53              	 * V1.11, May, 06, 2014 JFT:__COPY_FLASH2RAM to initialize ram 
  54              	 *                          Added ram_code section initialization
  55              	 * V1.12, Sep, 29, 2014 JFT:One single default handler
  56              	 *                          Device_Data.h not included, user may use CLKVAL1_SSW
  57              	 *                          and CLKVAL2_SSW.
  58              	 *                          software_init_hook and hardware_init_hook removed
  59              	 *                          Misc optimizations
  60              	 * V1.13, Dec, 11,2014 JFT:Default clocking changed, MCLK=32MHz and PCLK=64MHz
  61              	 * V1.14, Sep, 03,2015 JFT:SSW default clocking changed, MCLK=8MHz and PCLK=16MHz avoid problems wi
  62              	 * V1.15, Jan, 05,2016 JFT:Fix .reset section attributes
  63              	 * V1.20, Mai, 15,2020 JFT:Added option (ENABLE_OWN_HANDLER) to generate a individual interrupt han
  64              	 *
  65              	 * @endcond 
  66              	 */
  67              	
  68              	/*****************************************************************************
  69              	 * <h> Clock system handling by SSW
  70              	 *   <h> CLK_VAL1 Configuration
  71              	 *    <o0.0..7>    FDIV Fractional Divider Selection
  72              	 *    <i> Deafult: 0. Fractional part of clock divider, MCLK = DCO1 / (2 x (IDIV + (FDIV / 256)))
  73              	 *    <o0.8..15>   IDIV Divider Selection (limited to 1-16)
  74              	 *                    <0=> Divider is bypassed
  75              	 *                    <1=> MCLK = 32 MHz
  76              	 *                    <2=> MCLK = 16 MHz
  77              	 *                    <3=> MCLK = 10.67 MHz
  78              	 *                    <4=> MCLK = 8 MHz
  79              	 *                    <254=> MCLK = 126 kHz
  80              	 *                    <255=> MCLK = 125.5 kHz
  81              	 *    <i> Deafult: 4. Interger part of clock divider, MCLK = DCO1 / (2 x (IDIV + (FDIV / 256))) = 8
  82              	 *    <o0.16>      PCLKSEL PCLK Clock Select
  83              	 *                    <0=> PCLK = MCLK
  84              	 *                    <1=> PCLK = 2 x MCLK
  85              	 *    <i> Deafult: 2 x MCLK
  86              	 *    <o0.17..19>  RTCCLKSEL RTC Clock Select
  87              	 *                    <0=> 32.768kHz standby clock
  88              	 *                    <1=> 32.768kHz external clock from ERU0.IOUT0
  89              	 *                    <2=> 32.768kHz external clock from ACMP0.OUT
  90              	 *                    <3=> 32.768kHz external clock from ACMP1.OUT
  91              	 *                    <4=> 32.768kHz external clock from ACMP2.OUT
  92              	 *                    <5=> Reserved
  93              	 *                    <6=> Reserved
  94              	 *                    <7=> Reserved
  95              	 *    <i> Deafult: 32.768kHz standby clock 
  96              	 *    <o0.31>      do not move CLK_VAL1 to SCU_CLKCR[0..19]
  97              	 *  </h>
  98              	 *****************************************************************************/
  99              	#define CLKVAL1_SSW 0x00010400
 100              	
 101              	/*****************************************************************************
 102              	 *  <h> CLK_VAL2 Configuration
 103              	 *    <o0.0>    disable VADC and SHS Gating
 104              	 *    <o0.1>    disable CCU80 Gating
 105              	 *    <o0.2>    disable CCU40 Gating
 106              	 *    <o0.3>    disable USIC0 Gating
 107              	 *    <o0.4>    disable BCCU0 Gating
 108              	 *    <o0.5>    disable LEDTS0 Gating
 109              	 *    <o0.6>    disable LEDTS1 Gating
 110              	 *    <o0.7>    disable POSIF0 Gating
 111              	 *    <o0.8>    disable MATH Gating
 112              	 *    <o0.9>    disable WDT Gating
 113              	 *    <o0.10>   disable RTC Gating
 114              	 *    <o0.31>   do not move CLK_VAL2 to SCU_CGATCLR0[0..10]
 115              	 *  </h>
 116              	 *****************************************************************************/
 117              	#define CLKVAL2_SSW 0x00000100
 118              	
 119              	/* A macro to define vector table entries */
 120              	.macro Entry Handler
 121              	    .long \Handler
 122              	.endm
 123              	
 124              	/* A couple of macros to ease definition of the various handlers */
 125              	.macro Insert_ExceptionHandler Handler_Func 
 126              	    .weak \Handler_Func
 127              	#if defined(ENABLE_OWN_HANDLER)
 128              	    .thumb_func
 130              	\Handler_Func:
 131              	    b .
 133              	#else
 134              	    .thumb_set \Handler_Func, Default_handler
 135              	#endif 
 136              	.endm    
 137              	
 138              	/* ================== START OF VECTOR TABLE DEFINITION ====================== */
 139              	/* Vector Table - This is indirectly branched to through the veneers */
 140              	    .syntax unified   
 141              	    .cpu cortex-m0
 142              	
 143              	    .section .reset, "a", %progbits
 144              	    
 145              	 	.align 2
 146              	    
 147              	    .globl  __Vectors
 149              	__Vectors:
 150 0000 00000000 	    .long   __initial_sp                /* Top of Stack                 */
 151 0004 00000000 	    .long   Reset_Handler               /* Reset Handler                */
 152              	/* 
 153              	 * All entries below are redundant for M0, but are retained because they can
 154              	 * in the future be directly ported to M0 Plus devices.
 155              	 */
 156 0008 00000000 	    .long   0                           /* Reserved                     */
 157 000c 00000000 	    Entry   HardFault_Handler           /* Hard Fault Handler           */
 158 0010 00040100 	    .long   CLKVAL1_SSW                 /* Reserved                     */
 159 0014 00010000 	    .long   CLKVAL2_SSW                 /* Reserved                     */
 160              	#ifdef RETAIN_VECTOR_TABLE
 161              	    .long   0                           /* Reserved                     */
 162              	    .long   0                           /* Reserved                     */
 163              	    .long   0                           /* Reserved                     */
 164              	    .long   0                           /* Reserved                     */
 165              	    .long   0                           /* Reserved                     */
 166              	    Entry   SVC_Handler                 /* SVCall Handler               */
 167              	    .long   0                           /* Reserved                     */
 168              	    .long   0                           /* Reserved                     */
 169              	    Entry   PendSV_Handler              /* PendSV Handler               */
 170              	    Entry   SysTick_Handler             /* SysTick Handler              */
 171              	
 172              	    /* Interrupt Handlers for Service Requests (SR) from XMC1300 Peripherals */
 173              	    Entry   SCU_0_IRQHandler            /* Handler name for SR SCU_0     */
 174              	    Entry   SCU_1_IRQHandler            /* Handler name for SR SCU_1     */
 175              	    Entry   SCU_2_IRQHandler            /* Handler name for SR SCU_2     */
 176              	    Entry   ERU0_0_IRQHandler           /* Handler name for SR ERU0_0    */
 177              	    Entry   ERU0_1_IRQHandler           /* Handler name for SR ERU0_1    */
 178              	    Entry   ERU0_2_IRQHandler           /* Handler name for SR ERU0_2    */
 179              	    Entry   ERU0_3_IRQHandler           /* Handler name for SR ERU0_3    */
 180              	    Entry   MATH0_0_IRQHandler          /* Handler name for SR MATH0_0   */
 181              	    .long   0                           /* Not Available                 */
 182              	    Entry   USIC0_0_IRQHandler          /* Handler name for SR USIC0_0   */
 183              	    Entry   USIC0_1_IRQHandler          /* Handler name for SR USIC0_1   */
 184              	    Entry   USIC0_2_IRQHandler          /* Handler name for SR USIC0_2   */
 185              	    Entry   USIC0_3_IRQHandler          /* Handler name for SR USIC0_3   */
 186              	    Entry   USIC0_4_IRQHandler          /* Handler name for SR USIC0_4   */
 187              	    Entry   USIC0_5_IRQHandler          /* Handler name for SR USIC0_5   */
 188              	    Entry   VADC0_C0_0_IRQHandler       /* Handler name for SR VADC0_C0_0  */
 189              	    Entry   VADC0_C0_1_IRQHandler       /* Handler name for SR VADC0_C0_1  */
 190              	    Entry   VADC0_G0_0_IRQHandler       /* Handler name for SR VADC0_G0_0  */
 191              	    Entry   VADC0_G0_1_IRQHandler       /* Handler name for SR VADC0_G0_1  */
 192              	    Entry   VADC0_G1_0_IRQHandler       /* Handler name for SR VADC0_G1_0  */
 193              	    Entry   VADC0_G1_1_IRQHandler       /* Handler name for SR VADC0_G1_1  */
 194              	    Entry   CCU40_0_IRQHandler          /* Handler name for SR CCU40_0   */
 195              	    Entry   CCU40_1_IRQHandler          /* Handler name for SR CCU40_1   */
 196              	    Entry   CCU40_2_IRQHandler          /* Handler name for SR CCU40_2   */
 197              	    Entry   CCU40_3_IRQHandler          /* Handler name for SR CCU40_3   */
 198              	    Entry   CCU80_0_IRQHandler          /* Handler name for SR CCU80_0   */
 199              	    Entry   CCU80_1_IRQHandler          /* Handler name for SR CCU80_1   */
 200              	    Entry   POSIF0_0_IRQHandler         /* Handler name for SR POSIF0_0  */
 201              	    Entry   POSIF0_1_IRQHandler         /* Handler name for SR POSIF0_1  */
 202              	    .long   0                           /* Not Available                 */
 203              	    .long   0                           /* Not Available                 */
 204              	    Entry   BCCU0_0_IRQHandler          /* Handler name for SR BCCU0_0  */
 205              	#endif
 206              	
 208              	/* ================== END OF VECTOR TABLE DEFINITION ======================= */
 209              	
 210              	/* ================== START OF VECTOR ROUTINES ============================= */
 211              	
 212              	    .thumb 
 213              		.align 1
 214              	 
 215              	/* Reset Handler */
 216              	    .thumb_func 
 217              	    .globl  Reset_Handler
 219              	Reset_Handler: 
 220              	/* Initialize interrupt veneer */
 221 0018 1149     		ldr	r1, =eROData
 222 001a 124A     		ldr	r2, =VeneerStart
 223 001c 124B     		ldr	r3, =VeneerEnd
 224 001e 00F018F8 		bl  __copy_data
 225              	
 226 0022 1248     	    ldr  r0, =SystemInit
 227 0024 8047     	    blx  r0
 228              		
 229              	/* Initialize data */
 230 0026 1249     		ldr	r1, =DataLoadAddr
 231 0028 124A     		ldr	r2, =__data_start
 232 002a 134B     		ldr	r3, =__data_end
 233 002c 00F011F8 		bl  __copy_data
 234              	
 235              	/* RAM code */
 236 0030 1249     		ldr	r1, =__ram_code_load
 237 0032 134A     		ldr	r2, =__ram_code_start
 238 0034 134B     		ldr	r3, =__ram_code_end
 239 0036 00F00CF8 		bl  __copy_data
 240              	
 241              	/*  Define __SKIP_BSS_CLEAR to disable zeroing uninitialzed data in startup.
 242              	 *  The BSS section is specified by following symbols
 243              	 *    __bss_start__: start of the BSS section.
 244              	 *    __bss_end__: end of the BSS section.
 245              	 *
 246              	 *  Both addresses must be aligned to 4 bytes boundary.
 247              	 */
 248              	#ifndef __SKIP_BSS_CLEAR
 249 003a 1349     		ldr	r1, =__bss_start
 250 003c 134A     		ldr	r2, =__bss_end
 251              	
 252 003e 0020     		movs	r0, 0
 253              	
 254 0040 521A     		subs	r2, r1
 255 0042 02DD     		ble	.L_loop3_done
 256              	
 257              	.L_loop3:
 258 0044 043A     		subs	r2, #4
 259 0046 8850     		str	r0, [r1, r2]
 260 0048 FCDC     		bgt	.L_loop3
 261              	.L_loop3_done:
 262              	#endif /* __SKIP_BSS_CLEAR */
 263              	
 264              	#ifndef __SKIP_LIBC_INIT_ARRAY
 265 004a 1148     	    ldr  r0, =__libc_init_array
 266 004c 8047     	    blx  r0
 267              	#endif
 268              	
 269 004e 1148     	    ldr  r0, =main
 270 0050 8047     	    blx  r0
 271              	
 272              	    .thumb_func
 274              	__copy_data:
 275              	/*  The ranges of copy from/to are specified by following symbols
 276              	 *    r1: start of the section to copy from.
 277              	 *    r2: start of the section to copy to
 278              	 *    r3: end of the section to copy to
 279              	 *
 280              	 *  All addresses must be aligned to 4 bytes boundary.
 281              	 *  Uses r0
 282              	 */
 283 0052 9B1A     		subs	r3, r2
 284 0054 03DD     		ble	.L_loop_done
 285              	
 286              	.L_loop:
 287 0056 043B     		subs	r3, #4
 288 0058 C858     		ldr	r0, [r1,r3]
 289 005a D050     		str	r0, [r2,r3]
 290 005c FBDC     		bgt	.L_loop
 291              	
 292              	.L_loop_done:
 293 005e 7047     		bx  lr
 294              	
 295 0060 00000000 		.pool
 295      00000000 
 295      00000000 
 295      00000000 
 295      00000000 
 297              	/* ======================================================================== */
 298              	/* ========== START OF EXCEPTION HANDLER DEFINITION ======================== */
 299              	
 300              		.align 1
 301              	    
 302              	    .thumb_func
 303              	    .weak Default_handler
 305              	Default_handler:
 306 0098 FEE7     	    b  .
 308              	
 309              	    Insert_ExceptionHandler HardFault_Handler
 310              	    Insert_ExceptionHandler SVC_Handler
 311              	    Insert_ExceptionHandler PendSV_Handler
 312              	    Insert_ExceptionHandler SysTick_Handler
 313              	
 314              	    Insert_ExceptionHandler SCU_0_IRQHandler
 315              	    Insert_ExceptionHandler SCU_1_IRQHandler
 316              	    Insert_ExceptionHandler SCU_2_IRQHandler
 317              	    Insert_ExceptionHandler ERU0_0_IRQHandler
 318              	    Insert_ExceptionHandler ERU0_1_IRQHandler
 319              	    Insert_ExceptionHandler ERU0_2_IRQHandler
 320              	    Insert_ExceptionHandler ERU0_3_IRQHandler
 321              	    Insert_ExceptionHandler MATH0_0_IRQHandler
 322              	    Insert_ExceptionHandler VADC0_C0_0_IRQHandler
 323              	    Insert_ExceptionHandler VADC0_C0_1_IRQHandler
 324              	    Insert_ExceptionHandler VADC0_G0_0_IRQHandler
 325              	    Insert_ExceptionHandler VADC0_G0_1_IRQHandler
 326              	    Insert_ExceptionHandler VADC0_G1_0_IRQHandler
 327              	    Insert_ExceptionHandler VADC0_G1_1_IRQHandler
 328              	    Insert_ExceptionHandler CCU40_0_IRQHandler
 329              	    Insert_ExceptionHandler CCU40_1_IRQHandler
 330              	    Insert_ExceptionHandler CCU40_2_IRQHandler
 331              	    Insert_ExceptionHandler CCU40_3_IRQHandler
 332              	    Insert_ExceptionHandler CCU80_0_IRQHandler
 333              	    Insert_ExceptionHandler CCU80_1_IRQHandler
 334              	    Insert_ExceptionHandler POSIF0_0_IRQHandler
 335              	    Insert_ExceptionHandler POSIF0_1_IRQHandler
 336              	    Insert_ExceptionHandler USIC0_0_IRQHandler
 337              	    Insert_ExceptionHandler USIC0_1_IRQHandler
 338              	    Insert_ExceptionHandler USIC0_2_IRQHandler
 339              	    Insert_ExceptionHandler USIC0_3_IRQHandler
 340              	    Insert_ExceptionHandler USIC0_4_IRQHandler
 341              	    Insert_ExceptionHandler USIC0_5_IRQHandler
 342              	    Insert_ExceptionHandler BCCU0_0_IRQHandler
 343              	   
 344              	/* ======================================================================== */
 345              	
 346              	/* ==================VENEERS VENEERS VENEERS VENEERS VENEERS=============== */
 347 009a 0000     	    .section ".XmcVeneerCode","ax",%progbits
 348              	    
 349              	    .align 1
 350              	    
 351              	    .globl HardFault_Veneer
 352              	HardFault_Veneer:
 353 0000 2C48     	    LDR R0, =HardFault_Handler
 354 0002 8746     	    MOV PC,R0
 355 0004 00000000 	    .long 0
 356 0008 00000000 	    .long 0
 357 000c 00000000 	    .long 0
 358 0010 00000000 	    .long 0
 359 0014 00000000 	    .long 0
 360 0018 00000000 	    .long 0
 361 001c 00000000 	    .long 0
 362              	/* ======================================================================== */
 363              	    .globl SVC_Veneer
 364              	SVC_Veneer:
 365 0020 2548     	    LDR R0, =SVC_Handler
 366 0022 8746     	    MOV PC,R0
 367 0024 00000000 	    .long 0
 368 0028 00000000 	    .long 0
 369              	/* ======================================================================== */
 370              	    .globl PendSV_Veneer
 371              	PendSV_Veneer:
 372 002c 2348     	    LDR R0, =PendSV_Handler
 373 002e 8746     	    MOV PC,R0
 374              	/* ======================================================================== */
 375              	    .globl SysTick_Veneer 
 376              	SysTick_Veneer:
 377 0030 2348     	    LDR R0, =SysTick_Handler
 378 0032 8746     	    MOV PC,R0
 379              	/* ======================================================================== */
 380              	    .globl SCU_0_Veneer 
 381              	SCU_0_Veneer:
 382 0034 2348     	    LDR R0, =SCU_0_IRQHandler
 383 0036 8746     	    MOV PC,R0
 384              	/* ======================================================================== */
 385              	    .globl SCU_1_Veneer 
 386              	SCU_1_Veneer:
 387 0038 2348     	    LDR R0, =SCU_1_IRQHandler
 388 003a 8746     	    MOV PC,R0
 389              	/* ======================================================================== */
 390              	    .globl SCU_2_Veneer
 391              	SCU_2_Veneer:
 392 003c 2348     	    LDR R0, =SCU_2_IRQHandler
 393 003e 8746     	    MOV PC,R0
 394              	/* ======================================================================== */
 395              	    .globl SCU_3_Veneer 
 396              	SCU_3_Veneer:
 397 0040 2348     	    LDR R0, =ERU0_0_IRQHandler
 398 0042 8746     	    MOV PC,R0
 399              	/* ======================================================================== */
 400              	    .globl SCU_4_Veneer 
 401              	SCU_4_Veneer:
 402 0044 2348     	    LDR R0, =ERU0_1_IRQHandler
 403 0046 8746     	    MOV PC,R0
 404              	/* ======================================================================== */
 405              	    .globl SCU_5_Veneer 
 406              	SCU_5_Veneer:
 407 0048 2348     	    LDR R0, =ERU0_2_IRQHandler
 408 004a 8746     	    MOV PC,R0
 409              	/* ======================================================================== */
 410              	    .globl SCU_6_Veneer 
 411              	SCU_6_Veneer:
 412 004c 2348     	    LDR R0, =ERU0_3_IRQHandler
 413 004e 8746     	    MOV PC,R0
 414              	/* ======================================================================== */
 415              	    .globl MATH_Veneer 
 416              	MATH_Veneer:
 417 0050 2348     	    LDR R0, =MATH0_0_IRQHandler
 418 0052 8746     	    MOV PC,R0
 419 0054 00000000 	    .long 0
 420              	/* ======================================================================== */
 421              	    .globl USIC0_0_Veneer
 422              	USIC0_0_Veneer:
 423 0058 2248     	    LDR R0, =USIC0_0_IRQHandler
 424 005a 8746     	    MOV PC,R0
 425              	/* ======================================================================== */
 426              	    .globl USIC0_1_Veneer
 427              	USIC0_1_Veneer:
 428 005c 2248     	    LDR R0, =USIC0_1_IRQHandler
 429 005e 8746     	    MOV PC,R0
 430              	/* ======================================================================== */
 431              	    .globl USIC0_2_Veneer
 432              	USIC0_2_Veneer:
 433 0060 2248     	    LDR R0, =USIC0_2_IRQHandler
 434 0062 8746     	    MOV PC,R0
 435              	/* ======================================================================== */
 436              	    .globl USIC0_3_Veneer
 437              	USIC0_3_Veneer:
 438 0064 2248     	    LDR R0, =USIC0_3_IRQHandler
 439 0066 8746     	    MOV PC,R0
 440              	/* ======================================================================== */
 441              	    .globl USIC0_4_Veneer
 442              	USIC0_4_Veneer:
 443 0068 2248     	    LDR R0, =USIC0_4_IRQHandler
 444 006a 8746     	    MOV PC,R0
 445              	/* ======================================================================== */
 446              	    .globl USIC0_5_Veneer
 447              	USIC0_5_Veneer:
 448 006c 2248     	    LDR R0, =USIC0_5_IRQHandler
 449 006e 8746     	    MOV PC,R0
 450              	/* ======================================================================== */
 451              	    .globl VADC0_C0_0_Veneer 
 452              	VADC0_C0_0_Veneer:
 453 0070 2248     	    LDR R0, =VADC0_C0_0_IRQHandler
 454 0072 8746     	    MOV PC,R0
 455              	/* ======================================================================== */
 456              	    .globl VADC0_C0_1_Veneer
 457              	VADC0_C0_1_Veneer:
 458 0074 2248     	    LDR R0, =VADC0_C0_1_IRQHandler
 459 0076 8746     	    MOV PC,R0
 460              	/* ======================================================================== */
 461              	    .globl VADC0_G0_0_Veneer
 462              	VADC0_G0_0_Veneer:
 463 0078 2248     	    LDR R0, =VADC0_G0_0_IRQHandler
 464 007a 8746     	    MOV PC,R0
 465              	/* ======================================================================== */
 466              	    .globl VADC0_G0_1_Veneer
 467              	VADC0_G0_1_Veneer:
 468 007c 2248     	    LDR R0, =VADC0_G0_1_IRQHandler
 469 007e 8746     	    MOV PC,R0
 470              	/* ======================================================================== */
 471              	    .globl VADC0_G1_0_Veneer
 472              	VADC0_G1_0_Veneer:
 473 0080 2248     	    LDR R0, =VADC0_G1_0_IRQHandler
 474 0082 8746     	    MOV PC,R0
 475              	/* ======================================================================== */
 476              	    .globl VADC0_G1_1_Veneer
 477              	VADC0_G1_1_Veneer:
 478 0084 2248     	    LDR R0, =VADC0_G1_1_IRQHandler
 479 0086 8746     	    MOV PC,R0
 480              	/* ======================================================================== */
 481              	    .globl CCU40_0_Veneer
 482              	CCU40_0_Veneer:
 483 0088 2248     	    LDR R0, =CCU40_0_IRQHandler
 484 008a 8746     	    MOV PC,R0
 485              	/* ======================================================================== */
 486              	    .globl CCU40_1_Veneer
 487              	CCU40_1_Veneer:
 488 008c 2248     	    LDR R0, =CCU40_1_IRQHandler
 489 008e 8746     	    MOV PC,R0
 490              	/* ======================================================================== */
 491              	    .globl CCU40_2_Veneer
 492              	CCU40_2_Veneer:
 493 0090 2248     	    LDR R0, =CCU40_2_IRQHandler
 494 0092 8746     	    MOV PC,R0
 495              	/* ======================================================================== */
 496              	    .globl CCU40_3_Veneer
 497              	CCU40_3_Veneer:
 498 0094 2248     	    LDR R0, =CCU40_3_IRQHandler
 499 0096 8746     	    MOV PC,R0
 500              	/* ======================================================================== */
 501              	    .globl CCU80_0_Veneer
 502              	CCU80_0_Veneer:
 503 0098 2248     	    LDR R0, =CCU80_0_IRQHandler
 504 009a 8746     	    MOV PC,R0
 505              	/* ======================================================================== */
 506              	    .globl CCU80_1_Veneer
 507              	CCU80_1_Veneer:
 508 009c 2248     	    LDR R0, =CCU80_1_IRQHandler
 509 009e 8746     	    MOV PC,R0
 510              	/* ======================================================================== */
 511              	    .globl POSIF0_0_Veneer
 512              	POSIF0_0_Veneer:
 513 00a0 2248     	    LDR R0, =POSIF0_0_IRQHandler
 514 00a2 8746     	    MOV PC,R0
 515              	/* ======================================================================== */
 516              	    .globl POSIF0_1_Veneer
 517              	POSIF0_1_Veneer:
 518 00a4 2248     	    LDR R0, =POSIF0_1_IRQHandler
 519 00a6 8746     	    MOV PC,R0
 520 00a8 00000000 	    .long 0
 521 00ac 00000000 	    .long 0
 522              	/* ======================================================================== */
 523              	    .globl BCCU0_0_Veneer
 524              	BCCU0_0_Veneer:
 525 00b0 2048     	    LDR R0, =BCCU0_0_IRQHandler
 526 00b2 8746     	    MOV PC,R0
 527              	
 528              	/* ======================================================================== */
 529              	/* ======================================================================== */
 530              	
 531              	/* ============= END OF INTERRUPT HANDLER DEFINITION ======================== */
 532              	
 533 00b4 00000000 	    .end
 533      00000000 
 533      00000000 
 533      00000000 
 533      00000000 
DEFINED SYMBOLS
../Startup/startup_XMC1300.S:145    .reset:00000000 $d
../Startup/startup_XMC1300.S:149    .reset:00000000 __Vectors
../Startup/startup_XMC1300.S:219    .reset:00000018 Reset_Handler
../Startup/startup_XMC1300.S:305    .reset:00000098 HardFault_Handler
../Startup/startup_XMC1300.S:221    .reset:00000018 $t
../Startup/startup_XMC1300.S:274    .reset:00000052 __copy_data
../Startup/startup_XMC1300.S:295    .reset:00000060 $d
../Startup/startup_XMC1300.S:305    .reset:00000098 Default_handler
../Startup/startup_XMC1300.S:306    .reset:00000098 $t
../Startup/startup_XMC1300.S:305    .reset:00000098 SVC_Handler
../Startup/startup_XMC1300.S:305    .reset:00000098 PendSV_Handler
../Startup/startup_XMC1300.S:305    .reset:00000098 SysTick_Handler
../Startup/startup_XMC1300.S:305    .reset:00000098 SCU_0_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 SCU_1_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 SCU_2_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 ERU0_0_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 ERU0_1_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 ERU0_2_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 ERU0_3_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 MATH0_0_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 VADC0_C0_0_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 VADC0_C0_1_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 VADC0_G0_0_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 VADC0_G0_1_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 VADC0_G1_0_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 VADC0_G1_1_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 CCU40_0_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 CCU40_1_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 CCU40_2_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 CCU40_3_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 CCU80_0_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 CCU80_1_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 POSIF0_0_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 POSIF0_1_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 USIC0_0_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 USIC0_1_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 USIC0_2_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 USIC0_3_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 USIC0_4_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 USIC0_5_IRQHandler
../Startup/startup_XMC1300.S:305    .reset:00000098 BCCU0_0_IRQHandler
../Startup/startup_XMC1300.S:349    .XmcVeneerCode:00000000 $t
../Startup/startup_XMC1300.S:352    .XmcVeneerCode:00000000 HardFault_Veneer
../Startup/startup_XMC1300.S:355    .XmcVeneerCode:00000004 $d
../Startup/startup_XMC1300.S:364    .XmcVeneerCode:00000020 SVC_Veneer
../Startup/startup_XMC1300.S:365    .XmcVeneerCode:00000020 $t
../Startup/startup_XMC1300.S:367    .XmcVeneerCode:00000024 $d
../Startup/startup_XMC1300.S:371    .XmcVeneerCode:0000002c PendSV_Veneer
../Startup/startup_XMC1300.S:372    .XmcVeneerCode:0000002c $t
../Startup/startup_XMC1300.S:376    .XmcVeneerCode:00000030 SysTick_Veneer
../Startup/startup_XMC1300.S:381    .XmcVeneerCode:00000034 SCU_0_Veneer
../Startup/startup_XMC1300.S:386    .XmcVeneerCode:00000038 SCU_1_Veneer
../Startup/startup_XMC1300.S:391    .XmcVeneerCode:0000003c SCU_2_Veneer
../Startup/startup_XMC1300.S:396    .XmcVeneerCode:00000040 SCU_3_Veneer
../Startup/startup_XMC1300.S:401    .XmcVeneerCode:00000044 SCU_4_Veneer
../Startup/startup_XMC1300.S:406    .XmcVeneerCode:00000048 SCU_5_Veneer
../Startup/startup_XMC1300.S:411    .XmcVeneerCode:0000004c SCU_6_Veneer
../Startup/startup_XMC1300.S:416    .XmcVeneerCode:00000050 MATH_Veneer
../Startup/startup_XMC1300.S:419    .XmcVeneerCode:00000054 $d
../Startup/startup_XMC1300.S:422    .XmcVeneerCode:00000058 USIC0_0_Veneer
../Startup/startup_XMC1300.S:423    .XmcVeneerCode:00000058 $t
../Startup/startup_XMC1300.S:427    .XmcVeneerCode:0000005c USIC0_1_Veneer
../Startup/startup_XMC1300.S:432    .XmcVeneerCode:00000060 USIC0_2_Veneer
../Startup/startup_XMC1300.S:437    .XmcVeneerCode:00000064 USIC0_3_Veneer
../Startup/startup_XMC1300.S:442    .XmcVeneerCode:00000068 USIC0_4_Veneer
../Startup/startup_XMC1300.S:447    .XmcVeneerCode:0000006c USIC0_5_Veneer
../Startup/startup_XMC1300.S:452    .XmcVeneerCode:00000070 VADC0_C0_0_Veneer
../Startup/startup_XMC1300.S:457    .XmcVeneerCode:00000074 VADC0_C0_1_Veneer
../Startup/startup_XMC1300.S:462    .XmcVeneerCode:00000078 VADC0_G0_0_Veneer
../Startup/startup_XMC1300.S:467    .XmcVeneerCode:0000007c VADC0_G0_1_Veneer
../Startup/startup_XMC1300.S:472    .XmcVeneerCode:00000080 VADC0_G1_0_Veneer
../Startup/startup_XMC1300.S:477    .XmcVeneerCode:00000084 VADC0_G1_1_Veneer
../Startup/startup_XMC1300.S:482    .XmcVeneerCode:00000088 CCU40_0_Veneer
../Startup/startup_XMC1300.S:487    .XmcVeneerCode:0000008c CCU40_1_Veneer
../Startup/startup_XMC1300.S:492    .XmcVeneerCode:00000090 CCU40_2_Veneer
../Startup/startup_XMC1300.S:497    .XmcVeneerCode:00000094 CCU40_3_Veneer
../Startup/startup_XMC1300.S:502    .XmcVeneerCode:00000098 CCU80_0_Veneer
../Startup/startup_XMC1300.S:507    .XmcVeneerCode:0000009c CCU80_1_Veneer
../Startup/startup_XMC1300.S:512    .XmcVeneerCode:000000a0 POSIF0_0_Veneer
../Startup/startup_XMC1300.S:517    .XmcVeneerCode:000000a4 POSIF0_1_Veneer
../Startup/startup_XMC1300.S:520    .XmcVeneerCode:000000a8 $d
../Startup/startup_XMC1300.S:524    .XmcVeneerCode:000000b0 BCCU0_0_Veneer
../Startup/startup_XMC1300.S:525    .XmcVeneerCode:000000b0 $t
../Startup/startup_XMC1300.S:533    .XmcVeneerCode:000000b4 $d
../Startup/startup_XMC1300.S:347    .reset:0000009a $d

UNDEFINED SYMBOLS
__initial_sp
eROData
VeneerStart
VeneerEnd
SystemInit
DataLoadAddr
__data_start
__data_end
__ram_code_load
__ram_code_start
__ram_code_end
__bss_start
__bss_end
__libc_init_array
main
